import { PipelineRequest, PipelineResponse } from "@azure/core-rest-pipeline";
import { AuthMethod } from "./recordedClient.js";
import { Recorder } from "@azure-tools/test-recorder";
export declare function withDeployments<T>(deployments: string[], run: (model: string) => Promise<T>, validate: (result: T) => void): Promise<string[]>;
export declare function sendRequestWithRecorder(request: PipelineRequest, recorder: Recorder): Promise<PipelineResponse>;
export declare function updateWithSucceeded(succeeded: string[], deployments: string[], models: string[], authMethod: AuthMethod): void;
export declare function getSucceeded(authMethod: AuthMethod, deployments: string[], models: string[], succeededDeployments: string[], succeededModels: string[]): string[];
export declare function getDeployments(recorder: Recorder): Promise<string[]>;
export declare function getModels(recorder: Recorder): Promise<string[]>;
export declare function bufferAsyncIterable<T>(iter: AsyncIterable<T>): Promise<T[]>;
//# sourceMappingURL=utils.d.ts.map